require 'os'
require'string'
require'math'
--
require'cimgui'
require'simple'
require'imgui_backend_opengl3'
require'imgui_backend_glfw'
require'loadImage'
require'utils'
require'IconsFontAwesome6'
require'iconFontTblDef'

require'vector'

--- External functions
local function setupFonts() <cimport> end                -- from utils/setupFonts.c

--- Initial Window size
local MainWinWidth <const>  = 1600
local MainWinHeight <const> =  900

--- Constants
local yellow = ImVec4{1.0, 1.0, 0.0, 1.0}
local green  = ImVec4{0.0, 1.0, 0.0, 1.0}

--- Global vars
local versions : [][2]int32 = {{4, 6} ,{4, 5} ,{4, 4} ,{4, 3} ,{4, 2} ,{4, 1} ,{4, 0} ,{3, 3} }

--- Forward definitions
local iconAnimals: [16][2]cstring

---------
--- main
---------
local main = function()
  glfwInit()
  defer glfwTerminate()  end
  local glfwWin: *GLFWwindow = nilptr
  local glsl_version:cstring -- = "#version 330"
  for _, ver in ipairs(versions) do
  glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE)
    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, ver[0])
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, ver[1])
  glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GLFW_TRUE)
  glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE)
  glfwWindowHint(GLFW_RESIZABLE, GLFW_TRUE)

    glfwWin = glfwCreateWindow(MainWinWidth, MainWinHeight, "ImGui with Nelua ", nilptr, nilptr)
    if nilptr ~= glfwWin then
      glsl_version = "#version " .. tostring( ver[0] * 100 + ver[1] * 10)
      break
    end
  end
  if nilptr == glfwWin then
    print("Could not create window")
    os.exit(false)
  end
  defer glfwDestroyWindow(glfwWin) end

  glfwMakeContextCurrent(glfwWin)
  glfwSwapInterval(1) -- Enable vsync

  ------------------------
  --- Load title bar icon
  ------------------------
  local IconName = "res/img/nl.png"
  LoadTitleBarIcon(glfwWin, IconName)

  if gladLoadGL(glfwGetProcAddress) == 0 then
    error 'Could not initialize GLAD'
  end
  print('OpenGL loaded:', (@cstring)(glGetString(GL_VERSION)))

  local context = ImGui_CreateContext()
  defer ImGui_DestroyContext(context) end

  ImGui_ImplGlfw_InitForOpenGL(glfwWin, true)
  defer ImGui_ImplGlfw_Shutdown() end

  local glsl_version:cstring <comptime> = "#version 330"
  ImGui_ImplOpenGL3_Init(glsl_version)
  defer ImGui_ImplOpenGL3_Shutdown() end

  setupFonts()

  local showDemoWindow = false
  local showFirstWindow = true
  local showWindowDelay = 2 -- TODO : Avoid flickering window at start up.
  local sBuf:string = string.create(100)
  sBuf[1] = 0
  local clearColor: [3]cfloat = {0.25,0.65,0.85}
  local item_current:cint = 0

  local listBoxTextureID: GLuint = 0  -- Must be == 0 at first

  local pio = ImGui_GetIO()

  local wsZoom:float32  = 45
  local item_highlighted_idx = 1

  local filterVec:vector(string)
  local filter: ImGuiTextFilter

  --------------------
  --- Main while loop
  --------------------
  while glfwWindowShouldClose(glfwWin) == 0 do
    glfwPollEvents()

    ImGui_ImplOpenGL3_NewFrame() -- start imgui frame
    ImGui_ImplGlfw_NewFrame()
    ImGui_NewFrame()

    if showDemoWindow then
      ImGui_ShowDemoWindow(&showDemoWindow)
    end


    -------------------------------
    --- Show icon font view window
    -------------------------------
    do ImGui_Begin("Icon Font Viewer", nilptr, 0)
      defer ImGui_End() end
      ImGui_SeparatorText(ICON_FA_FONT_AWESOME .. " Icon font view: " .. tostring(#iconFontTbl) .. " icons")
      --
      local listBoxWidth = 320              -- The value must be 2^n
      do
        ImGui_Text("No.[%4d]", item_current)      ImGui_SameLine()
        sBuf = iconFontTbl[item_current]
        if ImGui_Button(ICON_FA_COPY .. " Copy to") then
          local r, seqStr = string.match(sBuf,".+(ICON.+)$")
          if r then
            ImGui_SetClipboardText(seqStr[1])
          end
        end
        setTooltip("Clipboard", ImGuiHoveredFlags_DelayNormal, green) -- Show tooltip help
      end
      -- Show ListBox header
      ImGui_SetNextItemWidth(listBoxWidth)
      ImGui_InputText("##inputtext1", sBuf, #sBuf, ImGuiInputTextFlags_None)

      -- Show ListBox main
      local listBoxPosTop:ImVec2
      local listBoxPosEnd:ImVec2
      ImGui_NewLine()
      local listBoxPosTop = ImGui_GetCursorScreenPos() -- Get absolute pos.
      ImGui_SetNextItemWidth(listBoxWidth)

      ImGui_ListBox("##listbox1"
                        , &item_current
                        , &iconFontTbl[0]
                        , #iconFontTbl, 34)
      local listBoxPosEnd  = ImGui_GetCursorScreenPos() -- Get absolute pos.

      -- Show magnifying glass (Zoom in Toolchip)
      if ImGui_IsItemHovered(ImGuiHoveredFlags_DelayNone) then
        local MousePos = ImGui_GetIO().MousePos
        if (MousePos.x - listBoxPosTop.x ) < 50 then
          zoomGlass(&listBoxTextureID, listBoxWidth, listBoxPosTop, listBoxPosEnd )
        end
      end
    end -- ImGui_Begin("Icon Font Viewer"...) end

    ------------------------
    --- Show icons in Table
    ------------------------
    do ImGui_Begin("Icon Font Viewer2", nilptr, 0)
      defer ImGui_End() end
      -- Zoom bar
      ImGui_Text("%s", " Zoom x"); ImGui_SameLine()
      ImGui_SliderFloat("##Zoom1", &wsZoom, 30.0, 90.0)
      --- Tab Start
      ImGui_SetNextItemWidth(-1)
      do ImGui_BeginTabBar("IconsTab", 0)
        defer ImGui_EndTabBar() end
        ------------
        --- All tab
        ------------
        if ImGui_BeginTabItem("All icons", nilptr, 0) then
          defer ImGui_EndTabItem() end

          do ImGui_BeginChild("child2", ImVec2{0,0}, 0, 0)
            defer ImGui_EndChild() end

            local flags = ImGuiTableFlags_Borders | ImGuiTableFlags_RowBg | ImGuiTableFlags_BordersOuter | ImGuiTableFlags_BordersV | ImGuiTableFlags_Resizable | ImGuiTableFlags_Reorderable | ImGuiTableFlags_Hideable
            local text_base_height = ImGui_GetTextLineHeightWithSpacing()
            local outer_size = ImVec2{0.0, text_base_height * 8}
            local col = 10

            if ImGui_BeginTableEx("table_scrolly", col, flags, outer_size, 0) then
              defer ImGui_EndTable() end
              for row = 0, (#iconFontTbl2 / col) - 1 do
                ImGui_TableNextRow()
                for column = 0, col - 1 do
                  local ix:integer = (row  * col) + column
                  ImGui_TableSetColumnIndex(column)
                  --igSetWindowFontScale(wsZoom)
                  ImGui_PushFontFloat(nilptr, wsZoom)
                  ImGui_Text("%s", iconFontTbl2[ix][0])
                  if ImGui_IsItemHovered() then
                     item_highlighted_idx = ix
                     item_current =  ix
                  end
                  ImGui_PopFont()
                  local iconFontLabel = iconFontTbl2[ix][1]
                  setTooltip(iconFontLabel, ImGuiHoveredFlags_DelayNormal, yellow)
                  --igSetWindowFontScale(wsNormal)
                  --
                  ImGui_PushIDInt(ix)
                  if ImGui_BeginPopupContextItemEx("Contex Menu", 1) then
                    if ImGui_MenuItem("Copy to clip board") then
                      item_current =  ix
                      ImGui_SetClipboardText(iconFontTbl2[ix][1])
                    end
                    ImGui_EndPopup()
                  end
                  ImGui_PopID()
                end -- for column end
              end -- for row end
            end -- end ImGui_BeginTable
          end -- end ImGui_BeginChild
        end -- ImGui_BeginTabItem All

        ---------------
        --- Animal tab
        ---------------
        if ImGui_BeginTabItem(ICON_FA_DOG .. " Animal", nilptr, 0) then
          defer ImGui_EndTabItem() end
          do ImGui_BeginChild("chld_animal", ImVec2{0,0}, 0, 0)
            defer ImGui_EndChild() end
            local flags = ImGuiTableFlags_Borders | ImGuiTableFlags_RowBg | ImGuiTableFlags_BordersOuter | ImGuiTableFlags_BordersV | ImGuiTableFlags_Resizable | ImGuiTableFlags_Reorderable | ImGuiTableFlags_Hideable
            local text_base_height = ImGui_GetTextLineHeightWithSpacing()
            local outer_size = ImVec2{0.0, text_base_height * 8}
            local col = 2
            if ImGui_BeginTableEx("table_scrolly2", col, flags, outer_size, 0) then
              defer ImGui_EndTable() end
              for row = 0, (#iconAnimals / col) - 1 do
                ImGui_TableNextRow()
                for column = 0, col - 1 do
                  local ix:integer = (row  * col) + column
                  ImGui_TableSetColumnIndex(column)
                  --igSetWindowFontScale(wsZoom)
                  ImGui_PushFontFloat(nilptr, wsZoom)
                  ImGui_Text("%s", iconAnimals[ix][0])
                  if ImGui_IsItemHovered() then
                     item_highlighted_idx = ix
                  end
                  ImGui_PopFont()
                  local iconFontLabel = iconAnimals[ix][1]
                  setTooltip(iconFontLabel, ImGuiHoveredFlags_DelayNormal, yellow)
                  --igSetWindowFontScale(wsNormal)
                  --
                  ImGui_PushIDInt(ix)
                  if ImGui_BeginPopupContextItemEx("Contex Menu", 1) then
                    if ImGui_MenuItem("Copy to clip board") then
                      ImGui_SetClipboardText(iconAnimals[ix][1])
                    end
                    ImGui_EndPopup()
                  end
                  ImGui_PopID()
                end -- for column end
              end -- for row end
            end -- end ImGui_BeginTable
          end -- end ImGui_BeginChild
        end -- ImGui_BeginTabItem
      end -- ImGui_BeginTabBar
    end -- end ImGui_Begin

    -----------------------
    --- Text filter window
    -----------------------
    do ImGui_Begin("Icon Font filter", nilptr, 0)
      defer ImGui_End() end
      ImGui_Text("(Copy)")
      if ImGui_IsItemHovered() then
        local bRes, seqRes = filterVec[0]:match(".+(ICON.+)")
        if bRes then
          ImGui_SetClipboardText(seqRes[1])
        end
      end
      filterVec:clear()
      setTooltip("Copied first line to clipboard !", ImGuiHoveredFlags_DelayNormal, green) -- Show tooltip help
      ImGui_SameLine()
      filter = ImGuiTextFilter{}
      ImGuiTextFilter_Draw(filter, "Filter", 0)
      local tbl = iconFontTbl
      for i=0,<#tbl do
        local pstr = tbl[i]
        if ImGuiTextFilter_PassFilter(filter, pstr, nilptr) then
          ImGui_Text("[%04s]  %s", tostring(i), tbl[i])
          filterVec:insert(#filterVec, tbl[i])
        end
      end
    end

    ---------------
    ImGui_Render()
    glClearColor(clearColor[0], clearColor[1], clearColor[2], 1.0)
    glClear(GL_COLOR_BUFFER_BIT)
    ImGui_ImplOpenGL3_RenderDrawData(ImGui_GetDrawData())

    glfwSwapBuffers(glfwWin)

    if showWindowDelay >= 0 then
      showWindowDelay = showWindowDelay - 1
    end
    if showWindowDelay == 0 then
      glfwShowWindow(glfwWin)
    end
  end -- main while loop end

end -- main() end

iconAnimals = {
  {ICON_FA_CAT, "  ICON_FA_CAT "},
  {ICON_FA_CROW, "  ICON_FA_CROW "},
  {ICON_FA_DOG, "  ICON_FA_DOG "},
  {ICON_FA_DOVE, "  ICON_FA_DOVE "},
  {ICON_FA_DRAGON, "  ICON_FA_DRAGON "},
  {ICON_FA_FISH, "  ICON_FA_FISH "},
  {ICON_FA_FISH_FINS, "  ICON_FA_FISH_FINS "},
  {ICON_FA_FROG, "  ICON_FA_FROG "},
  {ICON_FA_GHOST, "  ICON_FA_GHOST "},
  {ICON_FA_HIPPO, "  ICON_FA_HIPPO "},
  {ICON_FA_HORSE, "  ICON_FA_HORSE "},
  {ICON_FA_KIWI_BIRD, "  ICON_FA_KIWI_BIRD "},
  {ICON_FA_LOCUST, "  ICON_FA_LOCUST "},
  {ICON_FA_MOSQUITO, "  ICON_FA_MOSQUITO "},
  {ICON_FA_PIGGY_BANK, "  ICON_FA_PIGGY_BANK "},
  {ICON_FA_SPAGHETTI_MONSTER_FLYING, "  ICON_FA_SPAGHETTI_MONSTER_FLYING "},
}

main()
