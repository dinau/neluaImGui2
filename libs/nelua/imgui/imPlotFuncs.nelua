require'cimgui'
require'cimplot'
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *float32, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_FloatPtr'> end
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *float64, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_doublePtr'> end
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *int8, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_S8Ptr'> end
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *uint8, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_U8Ptr'> end
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *int16, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_S16Ptr'> end
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *uint16, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_U16Ptr'> end
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *int32, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_S32Ptr'> end
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *uint32, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_U32Ptr'> end
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *int64, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_S64Ptr'> end
global function ImPlot_PlotBarGroups(label_ids: *cstring, values: *uint64, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_U64Ptr'> end
global function ImPlot_PlotBars(label_id: cstring, values: *float32, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_FloatPtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, values: *float64, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_doublePtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, values: *int8, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S8PtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, values: *uint8, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U8PtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, values: *int16, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S16PtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, values: *uint16, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U16PtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, values: *int32, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S32PtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, values: *uint32, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U32PtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, values: *int64, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S64PtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, values: *uint64, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U64PtrInt'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *float32, ys: *float32, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_FloatPtrFloatPtr'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *float64, ys: *float64, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_doublePtrdoublePtr'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *int8, ys: *int8, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S8PtrS8Ptr'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U8PtrU8Ptr'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *int16, ys: *int16, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S16PtrS16Ptr'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U16PtrU16Ptr'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *int32, ys: *int32, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S32PtrS32Ptr'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U32PtrU32Ptr'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *int64, ys: *int64, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S64PtrS64Ptr'> end
global function ImPlot_PlotBars(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U64PtrU64Ptr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *float32, ys: *float32, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_FloatPtr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *float64, ys: *float64, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_doublePtr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *int8, ys: *int8, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_S8Ptr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_U8Ptr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *int16, ys: *int16, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_S16Ptr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_U16Ptr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *int32, ys: *int32, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_S32Ptr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_U32Ptr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *int64, ys: *int64, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_S64Ptr'> end
global function ImPlot_PlotDigital(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_U64Ptr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *float32, ys: *float32, err: *float32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *float64, ys: *float64, err: *float64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *int8, ys: *int8, err: *int8, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *uint8, ys: *uint8, err: *uint8, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *int16, ys: *int16, err: *int16, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *uint16, ys: *uint16, err: *uint16, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *int32, ys: *int32, err: *int32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *uint32, ys: *uint32, err: *uint32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *int64, ys: *int64, err: *int64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *uint64, ys: *uint64, err: *uint64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrInt'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *float32, ys: *float32, neg: *float32, pos: *float32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrFloatPtr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *float64, ys: *float64, neg: *float64, pos: *float64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrdoublePtr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *int8, ys: *int8, neg: *int8, pos: *int8, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrS8Ptr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *uint8, ys: *uint8, neg: *uint8, pos: *uint8, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrU8Ptr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *int16, ys: *int16, neg: *int16, pos: *int16, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrS16Ptr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *uint16, ys: *uint16, neg: *uint16, pos: *uint16, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrU16Ptr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *int32, ys: *int32, neg: *int32, pos: *int32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrS32Ptr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *uint32, ys: *uint32, neg: *uint32, pos: *uint32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrU32Ptr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *int64, ys: *int64, neg: *int64, pos: *int64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrS64Ptr'> end
global function ImPlot_PlotErrorBars(label_id: cstring, xs: *uint64, ys: *uint64, neg: *uint64, pos: *uint64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrU64Ptr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *float32, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_FloatPtr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *float64, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_doublePtr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *int8, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_S8Ptr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *uint8, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_U8Ptr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *int16, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_S16Ptr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *uint16, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_U16Ptr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *int32, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_S32Ptr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *uint32, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_U32Ptr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *int64, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_S64Ptr'> end
global function ImPlot_PlotHistogram(label_id: cstring, values: *uint64, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_U64Ptr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *float32, ys: *float32, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_FloatPtr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *float64, ys: *float64, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_doublePtr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *int8, ys: *int8, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_S8Ptr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_U8Ptr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *int16, ys: *int16, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_S16Ptr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_U16Ptr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *int32, ys: *int32, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_S32Ptr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_U32Ptr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *int64, ys: *int64, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_S64Ptr'> end
global function ImPlot_PlotHistogram2D(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_U64Ptr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *float32, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_FloatPtr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *float64, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_doublePtr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *int8, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_S8Ptr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *uint8, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_U8Ptr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *int16, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_S16Ptr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *uint16, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_U16Ptr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *int32, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_S32Ptr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *uint32, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_U32Ptr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *int64, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_S64Ptr'> end
global function ImPlot_PlotInfLines(label_id: cstring, values: *uint64, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_U64Ptr'> end
global function ImPlot_PlotLine(label_id: cstring, values: *float32, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_FloatPtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, values: *float64, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_doublePtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, values: *int8, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S8PtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, values: *uint8, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U8PtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, values: *int16, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S16PtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, values: *uint16, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U16PtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, values: *int32, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S32PtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, values: *uint32, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U32PtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, values: *int64, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S64PtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, values: *uint64, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U64PtrInt'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *float32, ys: *float32, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_FloatPtrFloatPtr'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *float64, ys: *float64, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_doublePtrdoublePtr'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *int8, ys: *int8, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S8PtrS8Ptr'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U8PtrU8Ptr'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *int16, ys: *int16, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S16PtrS16Ptr'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U16PtrU16Ptr'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *int32, ys: *int32, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S32PtrS32Ptr'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U32PtrU32Ptr'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *int64, ys: *int64, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S64PtrS64Ptr'> end
global function ImPlot_PlotLine(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U64PtrU64Ptr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *float32, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_FloatPtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *float64, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_doublePtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *int8, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S8PtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *uint8, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U8PtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *int16, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S16PtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *uint16, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U16PtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *int32, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S32PtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *uint32, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U32PtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *int64, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S64PtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *uint64, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U64PtrPlotFormatter'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *float32, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_FloatPtrStr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *float64, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_doublePtrStr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *int8, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S8PtrStr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *uint8, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U8PtrStr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *int16, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S16PtrStr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *uint16, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U16PtrStr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *int32, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S32PtrStr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *uint32, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U32PtrStr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *int64, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S64PtrStr'> end
global function ImPlot_PlotPieChart(label_ids: *cstring, values: *uint64, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U64PtrStr'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *float32, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_FloatPtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *float64, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_doublePtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *int8, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S8PtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *uint8, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U8PtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *int16, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S16PtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *uint16, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U16PtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *int32, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S32PtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *uint32, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U32PtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *int64, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S64PtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, values: *uint64, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U64PtrInt'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *float32, ys: *float32, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_FloatPtrFloatPtr'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *float64, ys: *float64, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_doublePtrdoublePtr'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *int8, ys: *int8, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S8PtrS8Ptr'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U8PtrU8Ptr'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *int16, ys: *int16, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S16PtrS16Ptr'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U16PtrU16Ptr'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *int32, ys: *int32, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S32PtrS32Ptr'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U32PtrU32Ptr'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *int64, ys: *int64, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S64PtrS64Ptr'> end
global function ImPlot_PlotScatter(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U64PtrU64Ptr'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *float32, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_FloatPtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *float64, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_doublePtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *int8, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S8PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *uint8, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U8PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *int16, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S16PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *uint16, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U16PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *int32, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S32PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *uint32, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U32PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *int64, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S64PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, values: *uint64, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U64PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *float32, ys: *float32, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_FloatPtrFloatPtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *float64, ys: *float64, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_doublePtrdoublePtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *int8, ys: *int8, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S8PtrS8PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U8PtrU8PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *int16, ys: *int16, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S16PtrS16PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U16PtrU16PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *int32, ys: *int32, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S32PtrS32PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U32PtrU32PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *int64, ys: *int64, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S64PtrS64PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U64PtrU64PtrInt'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *float32, ys1: *float32, ys2: *float32, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_FloatPtrFloatPtrFloatPtr'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *float64, ys1: *float64, ys2: *float64, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_doublePtrdoublePtrdoublePtr'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *int8, ys1: *int8, ys2: *int8, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S8PtrS8PtrS8Ptr'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *uint8, ys1: *uint8, ys2: *uint8, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U8PtrU8PtrU8Ptr'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *int16, ys1: *int16, ys2: *int16, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S16PtrS16PtrS16Ptr'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *uint16, ys1: *uint16, ys2: *uint16, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U16PtrU16PtrU16Ptr'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *int32, ys1: *int32, ys2: *int32, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S32PtrS32PtrS32Ptr'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *uint32, ys1: *uint32, ys2: *uint32, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U32PtrU32PtrU32Ptr'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *int64, ys1: *int64, ys2: *int64, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S64PtrS64PtrS64Ptr'> end
global function ImPlot_PlotShaded(label_id: cstring, xs: *uint64, ys1: *uint64, ys2: *uint64, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U64PtrU64PtrU64Ptr'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *float32, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_FloatPtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *float64, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_doublePtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *int8, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S8PtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *uint8, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U8PtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *int16, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S16PtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *uint16, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U16PtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *int32, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S32PtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *uint32, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U32PtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *int64, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S64PtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, values: *uint64, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U64PtrInt'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *float32, ys: *float32, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_FloatPtrFloatPtr'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *float64, ys: *float64, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_doublePtrdoublePtr'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *int8, ys: *int8, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S8PtrS8Ptr'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U8PtrU8Ptr'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *int16, ys: *int16, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S16PtrS16Ptr'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U16PtrU16Ptr'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *int32, ys: *int32, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S32PtrS32Ptr'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U32PtrU32Ptr'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *int64, ys: *int64, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S64PtrS64Ptr'> end
global function ImPlot_PlotStairs(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U64PtrU64Ptr'> end
global function ImPlot_PlotStems(label_id: cstring, values: *float32, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_FloatPtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, values: *float64, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_doublePtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, values: *int8, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S8PtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, values: *uint8, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U8PtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, values: *int16, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S16PtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, values: *uint16, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U16PtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, values: *int32, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S32PtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, values: *uint32, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U32PtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, values: *int64, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S64PtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, values: *uint64, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U64PtrInt'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *float32, ys: *float32, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_FloatPtrFloatPtr'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *float64, ys: *float64, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_doublePtrdoublePtr'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *int8, ys: *int8, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S8PtrS8Ptr'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U8PtrU8Ptr'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *int16, ys: *int16, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S16PtrS16Ptr'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U16PtrU16Ptr'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *int32, ys: *int32, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S32PtrS32Ptr'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U32PtrU32Ptr'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *int64, ys: *int64, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S64PtrS64Ptr'> end
global function ImPlot_PlotStems(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U64PtrU64Ptr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *float32, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_FloatPtr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *float64, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_doublePtr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *int8, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_S8Ptr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *uint8, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_U8Ptr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *int16, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_S16Ptr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *uint16, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_U16Ptr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *int32, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_S32Ptr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *uint32, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_U32Ptr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *int64, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_S64Ptr'> end
global function ipPlotBarGroups(label_ids: *cstring, values: *uint64, item_count: cint, group_count: cint, group_size: float64, shift: float64, flags: ImPlotBarGroupsFlags): void <nodecl,cimport 'ImPlot_PlotBarGroups_U64Ptr'> end
global function ipPlotBars(label_id: cstring, values: *float32, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_FloatPtrInt'> end
global function ipPlotBars(label_id: cstring, values: *float64, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_doublePtrInt'> end
global function ipPlotBars(label_id: cstring, values: *int8, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S8PtrInt'> end
global function ipPlotBars(label_id: cstring, values: *uint8, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U8PtrInt'> end
global function ipPlotBars(label_id: cstring, values: *int16, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S16PtrInt'> end
global function ipPlotBars(label_id: cstring, values: *uint16, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U16PtrInt'> end
global function ipPlotBars(label_id: cstring, values: *int32, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S32PtrInt'> end
global function ipPlotBars(label_id: cstring, values: *uint32, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U32PtrInt'> end
global function ipPlotBars(label_id: cstring, values: *int64, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S64PtrInt'> end
global function ipPlotBars(label_id: cstring, values: *uint64, count: cint, bar_size: float64, shift: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U64PtrInt'> end
global function ipPlotBars(label_id: cstring, xs: *float32, ys: *float32, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_FloatPtrFloatPtr'> end
global function ipPlotBars(label_id: cstring, xs: *float64, ys: *float64, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_doublePtrdoublePtr'> end
global function ipPlotBars(label_id: cstring, xs: *int8, ys: *int8, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S8PtrS8Ptr'> end
global function ipPlotBars(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U8PtrU8Ptr'> end
global function ipPlotBars(label_id: cstring, xs: *int16, ys: *int16, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S16PtrS16Ptr'> end
global function ipPlotBars(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U16PtrU16Ptr'> end
global function ipPlotBars(label_id: cstring, xs: *int32, ys: *int32, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S32PtrS32Ptr'> end
global function ipPlotBars(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U32PtrU32Ptr'> end
global function ipPlotBars(label_id: cstring, xs: *int64, ys: *int64, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_S64PtrS64Ptr'> end
global function ipPlotBars(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, bar_size: float64, flags: ImPlotBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotBars_U64PtrU64Ptr'> end
global function ipPlotDigital(label_id: cstring, xs: *float32, ys: *float32, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_FloatPtr'> end
global function ipPlotDigital(label_id: cstring, xs: *float64, ys: *float64, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_doublePtr'> end
global function ipPlotDigital(label_id: cstring, xs: *int8, ys: *int8, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_S8Ptr'> end
global function ipPlotDigital(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_U8Ptr'> end
global function ipPlotDigital(label_id: cstring, xs: *int16, ys: *int16, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_S16Ptr'> end
global function ipPlotDigital(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_U16Ptr'> end
global function ipPlotDigital(label_id: cstring, xs: *int32, ys: *int32, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_S32Ptr'> end
global function ipPlotDigital(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_U32Ptr'> end
global function ipPlotDigital(label_id: cstring, xs: *int64, ys: *int64, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_S64Ptr'> end
global function ipPlotDigital(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, flags: ImPlotDigitalFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotDigital_U64Ptr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *float32, ys: *float32, err: *float32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *float64, ys: *float64, err: *float64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *int8, ys: *int8, err: *int8, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *uint8, ys: *uint8, err: *uint8, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *int16, ys: *int16, err: *int16, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *uint16, ys: *uint16, err: *uint16, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *int32, ys: *int32, err: *int32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *uint32, ys: *uint32, err: *uint32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *int64, ys: *int64, err: *int64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *uint64, ys: *uint64, err: *uint64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrInt'> end
global function ipPlotErrorBars(label_id: cstring, xs: *float32, ys: *float32, neg: *float32, pos: *float32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_FloatPtrFloatPtrFloatPtrFloatPtr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *float64, ys: *float64, neg: *float64, pos: *float64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_doublePtrdoublePtrdoublePtrdoublePtr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *int8, ys: *int8, neg: *int8, pos: *int8, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S8PtrS8PtrS8PtrS8Ptr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *uint8, ys: *uint8, neg: *uint8, pos: *uint8, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U8PtrU8PtrU8PtrU8Ptr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *int16, ys: *int16, neg: *int16, pos: *int16, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S16PtrS16PtrS16PtrS16Ptr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *uint16, ys: *uint16, neg: *uint16, pos: *uint16, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U16PtrU16PtrU16PtrU16Ptr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *int32, ys: *int32, neg: *int32, pos: *int32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S32PtrS32PtrS32PtrS32Ptr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *uint32, ys: *uint32, neg: *uint32, pos: *uint32, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U32PtrU32PtrU32PtrU32Ptr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *int64, ys: *int64, neg: *int64, pos: *int64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_S64PtrS64PtrS64PtrS64Ptr'> end
global function ipPlotErrorBars(label_id: cstring, xs: *uint64, ys: *uint64, neg: *uint64, pos: *uint64, count: cint, flags: ImPlotErrorBarsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotErrorBars_U64PtrU64PtrU64PtrU64Ptr'> end
global function ipPlotHistogram(label_id: cstring, values: *float32, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_FloatPtr'> end
global function ipPlotHistogram(label_id: cstring, values: *float64, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_doublePtr'> end
global function ipPlotHistogram(label_id: cstring, values: *int8, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_S8Ptr'> end
global function ipPlotHistogram(label_id: cstring, values: *uint8, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_U8Ptr'> end
global function ipPlotHistogram(label_id: cstring, values: *int16, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_S16Ptr'> end
global function ipPlotHistogram(label_id: cstring, values: *uint16, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_U16Ptr'> end
global function ipPlotHistogram(label_id: cstring, values: *int32, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_S32Ptr'> end
global function ipPlotHistogram(label_id: cstring, values: *uint32, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_U32Ptr'> end
global function ipPlotHistogram(label_id: cstring, values: *int64, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_S64Ptr'> end
global function ipPlotHistogram(label_id: cstring, values: *uint64, count: cint, bins: cint, bar_scale: float64, Range: ImPlotRange, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram_U64Ptr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *float32, ys: *float32, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_FloatPtr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *float64, ys: *float64, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_doublePtr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *int8, ys: *int8, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_S8Ptr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_U8Ptr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *int16, ys: *int16, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_S16Ptr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_U16Ptr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *int32, ys: *int32, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_S32Ptr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_U32Ptr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *int64, ys: *int64, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_S64Ptr'> end
global function ipPlotHistogram2D(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, x_bins: cint, y_bins: cint, Range: ImPlotRect, flags: ImPlotHistogramFlags): cdouble <nodecl,cimport 'ImPlot_PlotHistogram2D_U64Ptr'> end
global function ipPlotInfLines(label_id: cstring, values: *float32, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_FloatPtr'> end
global function ipPlotInfLines(label_id: cstring, values: *float64, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_doublePtr'> end
global function ipPlotInfLines(label_id: cstring, values: *int8, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_S8Ptr'> end
global function ipPlotInfLines(label_id: cstring, values: *uint8, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_U8Ptr'> end
global function ipPlotInfLines(label_id: cstring, values: *int16, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_S16Ptr'> end
global function ipPlotInfLines(label_id: cstring, values: *uint16, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_U16Ptr'> end
global function ipPlotInfLines(label_id: cstring, values: *int32, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_S32Ptr'> end
global function ipPlotInfLines(label_id: cstring, values: *uint32, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_U32Ptr'> end
global function ipPlotInfLines(label_id: cstring, values: *int64, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_S64Ptr'> end
global function ipPlotInfLines(label_id: cstring, values: *uint64, count: cint, flags: ImPlotInfLinesFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotInfLines_U64Ptr'> end
global function ipPlotLine(label_id: cstring, values: *float32, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_FloatPtrInt'> end
global function ipPlotLine(label_id: cstring, values: *float64, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_doublePtrInt'> end
global function ipPlotLine(label_id: cstring, values: *int8, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S8PtrInt'> end
global function ipPlotLine(label_id: cstring, values: *uint8, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U8PtrInt'> end
global function ipPlotLine(label_id: cstring, values: *int16, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S16PtrInt'> end
global function ipPlotLine(label_id: cstring, values: *uint16, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U16PtrInt'> end
global function ipPlotLine(label_id: cstring, values: *int32, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S32PtrInt'> end
global function ipPlotLine(label_id: cstring, values: *uint32, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U32PtrInt'> end
global function ipPlotLine(label_id: cstring, values: *int64, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S64PtrInt'> end
global function ipPlotLine(label_id: cstring, values: *uint64, count: cint, xscale: float64, xstart: float64, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U64PtrInt'> end
global function ipPlotLine(label_id: cstring, xs: *float32, ys: *float32, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_FloatPtrFloatPtr'> end
global function ipPlotLine(label_id: cstring, xs: *float64, ys: *float64, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_doublePtrdoublePtr'> end
global function ipPlotLine(label_id: cstring, xs: *int8, ys: *int8, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S8PtrS8Ptr'> end
global function ipPlotLine(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U8PtrU8Ptr'> end
global function ipPlotLine(label_id: cstring, xs: *int16, ys: *int16, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S16PtrS16Ptr'> end
global function ipPlotLine(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U16PtrU16Ptr'> end
global function ipPlotLine(label_id: cstring, xs: *int32, ys: *int32, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S32PtrS32Ptr'> end
global function ipPlotLine(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U32PtrU32Ptr'> end
global function ipPlotLine(label_id: cstring, xs: *int64, ys: *int64, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_S64PtrS64Ptr'> end
global function ipPlotLine(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, flags: ImPlotLineFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotLine_U64PtrU64Ptr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *float32, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_FloatPtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *float64, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_doublePtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *int8, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S8PtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *uint8, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U8PtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *int16, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S16PtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *uint16, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U16PtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *int32, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S32PtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *uint32, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U32PtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *int64, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S64PtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *uint64, count: cint, x: float64, y: float64, radius: float64, fmt: ImPlotFormatter, fmt_data: pointer, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U64PtrPlotFormatter'> end
global function ipPlotPieChart(label_ids: *cstring, values: *float32, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_FloatPtrStr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *float64, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_doublePtrStr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *int8, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S8PtrStr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *uint8, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U8PtrStr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *int16, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S16PtrStr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *uint16, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U16PtrStr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *int32, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S32PtrStr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *uint32, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U32PtrStr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *int64, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_S64PtrStr'> end
global function ipPlotPieChart(label_ids: *cstring, values: *uint64, count: cint, x: float64, y: float64, radius: float64, label_fmt: cstring, angle0: float64, flags: ImPlotPieChartFlags): void <nodecl,cimport 'ImPlot_PlotPieChart_U64PtrStr'> end
global function ipPlotScatter(label_id: cstring, values: *float32, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_FloatPtrInt'> end
global function ipPlotScatter(label_id: cstring, values: *float64, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_doublePtrInt'> end
global function ipPlotScatter(label_id: cstring, values: *int8, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S8PtrInt'> end
global function ipPlotScatter(label_id: cstring, values: *uint8, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U8PtrInt'> end
global function ipPlotScatter(label_id: cstring, values: *int16, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S16PtrInt'> end
global function ipPlotScatter(label_id: cstring, values: *uint16, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U16PtrInt'> end
global function ipPlotScatter(label_id: cstring, values: *int32, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S32PtrInt'> end
global function ipPlotScatter(label_id: cstring, values: *uint32, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U32PtrInt'> end
global function ipPlotScatter(label_id: cstring, values: *int64, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S64PtrInt'> end
global function ipPlotScatter(label_id: cstring, values: *uint64, count: cint, xscale: float64, xstart: float64, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U64PtrInt'> end
global function ipPlotScatter(label_id: cstring, xs: *float32, ys: *float32, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_FloatPtrFloatPtr'> end
global function ipPlotScatter(label_id: cstring, xs: *float64, ys: *float64, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_doublePtrdoublePtr'> end
global function ipPlotScatter(label_id: cstring, xs: *int8, ys: *int8, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S8PtrS8Ptr'> end
global function ipPlotScatter(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U8PtrU8Ptr'> end
global function ipPlotScatter(label_id: cstring, xs: *int16, ys: *int16, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S16PtrS16Ptr'> end
global function ipPlotScatter(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U16PtrU16Ptr'> end
global function ipPlotScatter(label_id: cstring, xs: *int32, ys: *int32, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S32PtrS32Ptr'> end
global function ipPlotScatter(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U32PtrU32Ptr'> end
global function ipPlotScatter(label_id: cstring, xs: *int64, ys: *int64, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_S64PtrS64Ptr'> end
global function ipPlotScatter(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, flags: ImPlotScatterFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotScatter_U64PtrU64Ptr'> end
global function ipPlotShaded(label_id: cstring, values: *float32, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_FloatPtrInt'> end
global function ipPlotShaded(label_id: cstring, values: *float64, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_doublePtrInt'> end
global function ipPlotShaded(label_id: cstring, values: *int8, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S8PtrInt'> end
global function ipPlotShaded(label_id: cstring, values: *uint8, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U8PtrInt'> end
global function ipPlotShaded(label_id: cstring, values: *int16, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S16PtrInt'> end
global function ipPlotShaded(label_id: cstring, values: *uint16, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U16PtrInt'> end
global function ipPlotShaded(label_id: cstring, values: *int32, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S32PtrInt'> end
global function ipPlotShaded(label_id: cstring, values: *uint32, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U32PtrInt'> end
global function ipPlotShaded(label_id: cstring, values: *int64, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S64PtrInt'> end
global function ipPlotShaded(label_id: cstring, values: *uint64, count: cint, yref: float64, xscale: float64, xstart: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U64PtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *float32, ys: *float32, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_FloatPtrFloatPtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *float64, ys: *float64, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_doublePtrdoublePtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *int8, ys: *int8, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S8PtrS8PtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U8PtrU8PtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *int16, ys: *int16, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S16PtrS16PtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U16PtrU16PtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *int32, ys: *int32, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S32PtrS32PtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U32PtrU32PtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *int64, ys: *int64, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S64PtrS64PtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, yref: float64, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U64PtrU64PtrInt'> end
global function ipPlotShaded(label_id: cstring, xs: *float32, ys1: *float32, ys2: *float32, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_FloatPtrFloatPtrFloatPtr'> end
global function ipPlotShaded(label_id: cstring, xs: *float64, ys1: *float64, ys2: *float64, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_doublePtrdoublePtrdoublePtr'> end
global function ipPlotShaded(label_id: cstring, xs: *int8, ys1: *int8, ys2: *int8, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S8PtrS8PtrS8Ptr'> end
global function ipPlotShaded(label_id: cstring, xs: *uint8, ys1: *uint8, ys2: *uint8, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U8PtrU8PtrU8Ptr'> end
global function ipPlotShaded(label_id: cstring, xs: *int16, ys1: *int16, ys2: *int16, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S16PtrS16PtrS16Ptr'> end
global function ipPlotShaded(label_id: cstring, xs: *uint16, ys1: *uint16, ys2: *uint16, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U16PtrU16PtrU16Ptr'> end
global function ipPlotShaded(label_id: cstring, xs: *int32, ys1: *int32, ys2: *int32, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S32PtrS32PtrS32Ptr'> end
global function ipPlotShaded(label_id: cstring, xs: *uint32, ys1: *uint32, ys2: *uint32, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U32PtrU32PtrU32Ptr'> end
global function ipPlotShaded(label_id: cstring, xs: *int64, ys1: *int64, ys2: *int64, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_S64PtrS64PtrS64Ptr'> end
global function ipPlotShaded(label_id: cstring, xs: *uint64, ys1: *uint64, ys2: *uint64, count: cint, flags: ImPlotShadedFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotShaded_U64PtrU64PtrU64Ptr'> end
global function ipPlotStairs(label_id: cstring, values: *float32, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_FloatPtrInt'> end
global function ipPlotStairs(label_id: cstring, values: *float64, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_doublePtrInt'> end
global function ipPlotStairs(label_id: cstring, values: *int8, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S8PtrInt'> end
global function ipPlotStairs(label_id: cstring, values: *uint8, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U8PtrInt'> end
global function ipPlotStairs(label_id: cstring, values: *int16, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S16PtrInt'> end
global function ipPlotStairs(label_id: cstring, values: *uint16, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U16PtrInt'> end
global function ipPlotStairs(label_id: cstring, values: *int32, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S32PtrInt'> end
global function ipPlotStairs(label_id: cstring, values: *uint32, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U32PtrInt'> end
global function ipPlotStairs(label_id: cstring, values: *int64, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S64PtrInt'> end
global function ipPlotStairs(label_id: cstring, values: *uint64, count: cint, xscale: float64, xstart: float64, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U64PtrInt'> end
global function ipPlotStairs(label_id: cstring, xs: *float32, ys: *float32, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_FloatPtrFloatPtr'> end
global function ipPlotStairs(label_id: cstring, xs: *float64, ys: *float64, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_doublePtrdoublePtr'> end
global function ipPlotStairs(label_id: cstring, xs: *int8, ys: *int8, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S8PtrS8Ptr'> end
global function ipPlotStairs(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U8PtrU8Ptr'> end
global function ipPlotStairs(label_id: cstring, xs: *int16, ys: *int16, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S16PtrS16Ptr'> end
global function ipPlotStairs(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U16PtrU16Ptr'> end
global function ipPlotStairs(label_id: cstring, xs: *int32, ys: *int32, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S32PtrS32Ptr'> end
global function ipPlotStairs(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U32PtrU32Ptr'> end
global function ipPlotStairs(label_id: cstring, xs: *int64, ys: *int64, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_S64PtrS64Ptr'> end
global function ipPlotStairs(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, flags: ImPlotStairsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStairs_U64PtrU64Ptr'> end
global function ipPlotStems(label_id: cstring, values: *float32, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_FloatPtrInt'> end
global function ipPlotStems(label_id: cstring, values: *float64, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_doublePtrInt'> end
global function ipPlotStems(label_id: cstring, values: *int8, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S8PtrInt'> end
global function ipPlotStems(label_id: cstring, values: *uint8, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U8PtrInt'> end
global function ipPlotStems(label_id: cstring, values: *int16, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S16PtrInt'> end
global function ipPlotStems(label_id: cstring, values: *uint16, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U16PtrInt'> end
global function ipPlotStems(label_id: cstring, values: *int32, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S32PtrInt'> end
global function ipPlotStems(label_id: cstring, values: *uint32, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U32PtrInt'> end
global function ipPlotStems(label_id: cstring, values: *int64, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S64PtrInt'> end
global function ipPlotStems(label_id: cstring, values: *uint64, count: cint, ref: float64, scale: float64, start: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U64PtrInt'> end
global function ipPlotStems(label_id: cstring, xs: *float32, ys: *float32, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_FloatPtrFloatPtr'> end
global function ipPlotStems(label_id: cstring, xs: *float64, ys: *float64, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_doublePtrdoublePtr'> end
global function ipPlotStems(label_id: cstring, xs: *int8, ys: *int8, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S8PtrS8Ptr'> end
global function ipPlotStems(label_id: cstring, xs: *uint8, ys: *uint8, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U8PtrU8Ptr'> end
global function ipPlotStems(label_id: cstring, xs: *int16, ys: *int16, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S16PtrS16Ptr'> end
global function ipPlotStems(label_id: cstring, xs: *uint16, ys: *uint16, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U16PtrU16Ptr'> end
global function ipPlotStems(label_id: cstring, xs: *int32, ys: *int32, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S32PtrS32Ptr'> end
global function ipPlotStems(label_id: cstring, xs: *uint32, ys: *uint32, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U32PtrU32Ptr'> end
global function ipPlotStems(label_id: cstring, xs: *int64, ys: *int64, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_S64PtrS64Ptr'> end
global function ipPlotStems(label_id: cstring, xs: *uint64, ys: *uint64, count: cint, ref: float64, flags: ImPlotStemsFlags, offset: cint, stride: cint): void <nodecl,cimport 'ImPlot_PlotStems_U64PtrU64Ptr'> end
